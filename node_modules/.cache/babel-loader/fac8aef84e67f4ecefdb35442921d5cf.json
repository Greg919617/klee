{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_USER } from './types';\nexport const fetchUser = () => async dispatch => {\n  const res = await axios.get('/api/current_user');\n  dispatch({\n    type: FETCH_USER,\n    payload: res.data\n  });\n}; //action creator that post token to the backend server.\n\nexport const handleToken = token => async dispatch => {\n  const res = await axios.post('/api/stripe', token);\n  dispatch({\n    type: FETCH_USER,\n    payload: res.data\n  });\n}; //const fetchUser = ()  is the argument list\n// everything after => { is the function body}\n//async await syntax rather than .then promises","map":{"version":3,"sources":["C:\\Users\\SE\\Desktop\\klee\\src\\actions\\index.js"],"names":["axios","FETCH_USER","fetchUser","dispatch","res","get","type","payload","data","handleToken","token","post"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,GAAG,GAAI,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAV,CAAnB;AACCF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEL,UAAR;AAAoBM,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAAjC,GAAD,CAAR;AACH,CAHM,C,CAKP;;AACA,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW,MAAMP,QAAN,IAAkB;AACpD,QAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACW,IAAN,CAAW,aAAX,EAA0BD,KAA1B,CAAlB;AAEJP,EAAAA,QAAQ,CAAE;AAAEG,IAAAA,IAAI,EAAEL,UAAR;AAAoBM,IAAAA,OAAO,EAAEH,GAAG,CAACI;AAAjC,GAAF,CAAR;AACC,CAJM,C,CAKP;AACA;AACA","sourcesContent":["import axios from 'axios';\r\nimport { FETCH_USER } from './types';\r\n\r\nexport const fetchUser = () => async dispatch => {\r\n   const res =  await axios.get('/api/current_user')\r\n    dispatch({ type: FETCH_USER, payload: res.data });\r\n};\r\n\r\n//action creator that post token to the backend server.\r\nexport const handleToken = (token) => async dispatch => {\r\n    const res = await axios.post('/api/stripe', token);\r\n\r\ndispatch ({ type: FETCH_USER, payload: res.data });\r\n};\r\n//const fetchUser = ()  is the argument list\r\n// everything after => { is the function body}\r\n//async await syntax rather than .then promises"]},"metadata":{},"sourceType":"module"}